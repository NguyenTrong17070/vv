  Ôªømodule.exports.config = {
	name: "joinNoti",
	eventType: ["log:subscribe"],
	version: "1.0.3",
	credits: "Mirai",
	description: "Th√¥ng b√°o bot ho·∫∑c ng∆∞·ªùi v√†o nh√≥m",
	dependencies: {
		"fs-extra": ""
	}
};

module.exports.run = async function({ api, event, Users }) {
	const { join } = global.nodemodule["path"];
	const { threadID } = event;
	if (event.logMessageData.addedParticipants.some(i => i.userFbId == api.getCurrentUserID())) {
		api.changeNickname(`[ ${global.config.PREFIX} ] ‚Ä¢ ${(!global.config.BOTNAME) ? "Bot c·ªßa NT" : global.config.BOTNAME}`, threadID, api.getCurrentUserID());
		return api.sendMessage(`¬ª ùôÜùôÄùôè ùôâùôäùôÑ ùôèùôÉùòºùôâùôÉ ùòæùôäùôâùôÇ¬´\n\n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n‚ö†ùôçùôêùôáùôÄ\n1. C·∫•m spam nhi·ªÅu l·ªánh\n2. C·∫•m 2 bot 1 box (=ban)\n3. Th√™m bot ko xin (=ban)\n4. ƒê·ª´ng c√≥ m√† ch·ª≠i bot n√≥ out ƒë·∫•y :)))
\n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n`, threadID);
	}
	else {
		try {
			const { createReadStream, existsSync, mkdirSync } = global.nodemodule["fs-extra"];
			let { threadName, participantIDs } = await api.getThreadInfo(threadID);

			const threadData = global.data.threadData.get(parseInt(threadID)) || {};
			const path = join(__dirname, "cache", "joinMp4");
			const pathGif = join(path,`hi.mp4`);

			var mentions = [], nameArray = [], memLength = [], i = 0;
			
			for (id in event.logMessageData.addedParticipants) {
				const userName = event.logMessageData.addedParticipants[id].fullName;
				nameArray.push(userName);
				mentions.push({ tag: userName, id });
				memLength.push(participantIDs.length - i++);
			}
			memLength.sort((a, b) => a - b);
			
			(typeof threadData.customJoin == "undefined") ? msg = "ùïÆùñç√†ùñî ùï∏·ª´ùñìùñå ùï∞ùñí ùñÑ√™ùñö {name}.\n ùï•·ªõùïö ùïß·ªõùïö ùïüùïô√≥ùïû {threadName}.\n{type} ùïù√† ùïñùïû ùïöùï¶ ùï•ùïô·ª© {soThanhVien} ùïî·ªßùïí ùîπùïÜùïã ü•≤" : msg = threadData.customJoin;
			msg = msg
			.replace(/\{name}/g, nameArray.join(', '))
			.replace(/\{type}/g, (memLength.length > 1) ?  'c√°c b·∫°n' : 'b·∫°n')
			.replace(/\{soThanhVien}/g, memLength.join(', '))
			.replace(/\{threadName}/g, threadName);

			if (existsSync(path)) mkdirSync(path, { recursive: true });

			if (existsSync(pathGif)) formPush = { body: msg, attachment: createReadStream(pathGif), mentions }
			else formPush = { body: msg, mentions }

			return api.sendMessage(formPush, threadID);
		} catch (e) { return console.log(e) };
	}
}